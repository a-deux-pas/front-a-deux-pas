name: front-a-deux-pas Docker

on:
  # Trigger the workflow when the "Build" workflow completes (all jobs).
  workflow_run:
    workflows: ["build"]
    types:
      - completed

jobs:
  docker:
    # Condition to run this job only if the "Build" workflow succeeded.
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    env:
      APP_NAME: ${{ vars.APP_NAME }}
      APP_VERSION: ${{ github.event.workflow_run.outputs.APP_VERSION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Create environment.secret.ts file with Mapbox token
      - name: Create environment.secret.ts file
        run: |
          mkdir -p ./src/environments/
          # Create environment.secret.ts file with the secret Mapbox token.
          echo "export const environment = {" > ./src/environments/environment.secret.ts
          echo "  mapbox: {" >> ./src/environments/environment.secret.ts
          echo "    accessToken: '$MAPBOX_ACCESS_TOKEN'," >> ./src/environments/environment.secret.ts
          echo "  }" >> ./src/environments/environment.secret.ts
          echo "};" >> ./src/environments/environment.secret.ts
        env:
          MAPBOX_ACCESS_TOKEN: ${{ secrets.MAPBOX_ACCESS_TOKEN }}

      # - name: Download Application Package
      #   uses: actions/download-artifact@master
      #   with:
      #     name: ${{ env.APP_NAME }}-${{ env.APP_VERSION }}
      #     path: ${{ github.workspace }}

      # Prepare docker build with buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master
        with:
          driver: docker

      # Docker login
      - name: Login to Docker Hub
        uses: docker/login-action@master
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Docker build and push
      - name: Build and push
        uses: docker/build-push-action@master
        with:
          context: ${{ github.workspace }}
          file: Dockerfile
          push: ${{ github.event_name != 'pull_request' }} # Don't push on PR
          tags: docker.io/douniabed/${{ env.APP_NAME }}:${{ env.APP_VERSION }}
          build-args: |
            APP_NAME=${{ env.APP_NAME }}
            APP_VERSION=${{ env.APP_VERSION }}
