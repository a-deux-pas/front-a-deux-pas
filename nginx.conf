server {
  # Port sur lequel le serveur écoute les requêtes
  listen 4200;

  # Serveur DNS interne Docker utilisé pour résoudre les noms de domaine
  resolver 127.0.0.11;

  # Configuration de la route "/ping" pour tester la disponibilité du serveur
  # /access_log off : Désactivation de l'enregistrement d'accès pour cette route
  # /add_header : Ajout d'en-têtes HTTP indiquant le type de contenu
  # Réponse HTTP 200 "pong" pour confirmer la disponibilité du serveur
  location /ping {
    access_log off;
    add_header 'Content-Type' 'text/plain';
    return 200 "pong";
  }

  # Configuration de la route "/api/" pour rediriger les requêtes vers le serveur backend
  location /api/ {
    # Configuration des en-têtes pour la redirection des requêtes
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_http_version 1.1;

    # Définition de l'URL du serveur backend Spring
    set $api_spring_upstream http://127.0.0.1:8081/;
    # Redirection des requêtes vers le serveur backend Spring
    proxy_pass $api_spring_upstream;
  }

  location / {
    # Répertoire racine contenant les fichiers statiques de l'application Angular
    root /usr/share/nginx/html;
    index index.html;
    # Tentative de résolution du fichier demandé, sinon redirige vers index.html
    try_files $uri $uri/ /index.html =404;
  }

  # Inclut des configurations supplémentaires provenant de fichiers dans le répertoire /etc/nginx/extra-conf.d/.
  include /etc/nginx/extra-conf.d/*.conf;
}
